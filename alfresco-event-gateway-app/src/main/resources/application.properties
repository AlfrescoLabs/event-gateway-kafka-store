## API
alfresco.event.gateway.api.version=1
alfresco.event.gateway.api.base-path=/v${alfresco.event.gateway.api.version}

## ACTIVEMQ
spring.activemq.brokerUrl=tcp://localhost:61616
spring.jms.cache.enabled=false
# To support durability when creating a new activeMQ subscriber two things need to be done:
# 1 - Set the property alfresco.event.gateway.consumer.activemq.durableSubscription to true
# 2 - Set a unique id value for the property alfresco.event.gateway.consumer.activemq.clientId.
# This value must be unique for each instance of the event gateway connected to the same ActiveMQ
# topic listening for ACS events (default value is alfresco-event-gateway-01
alfresco.event.gateway.consumer.activemq.durableSubscription=true

## RESTFUL API DOCS
springdoc.api-docs.path=/api-docs

## LOGGING
logging.level.org.alfresco.event.gateway=INFO

## DATABASE
spring.datasource.url=jdbc:postgresql://localhost:5433/alfresco-event-gateway
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=alfresco-event-gateway
spring.datasource.password=alfresco-event-gateway
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

## BROKER CONFIG
# This is a sample about how to configure a broker config with id "my-broker" (only broker-url is
# mandatory). You can add any number of different broker configurations
# alfresco.event.gateway.publication.jms.broker.my-broker.broker-url=tcp://localhost:61616
# alfresco.event.gateway.publication.jms.broker.my-broker.username=test
# alfresco.event.gateway.publication.jms.broker.my-broker.password=my-secret
# If this optional parameter is set with a regexp, then only destination names that matches the regexp
# can be set in the subscriptions. Otherwise, a SubscriptionConfigurationException is raised. In the
# regexp the literal {username} can be used as a placeholder of the username of the user creating
# the subscription
# alfresco.event.gateway.publication.jms.broker.my-broker.destination-pattern=aeg-{username}-(.+)
# Circuit Breaker configuration (defaulted to threshold 5 and half open after 1 second)
# alfresco.event.gateway.publication.jms.broker.my-broker.circuit-threshold=5
# alfresco.event.gateway.publication.jms.broker.my-broker.circuit-halfOpenAfter=1000
# Retry configuration (defaulted to 3 attempts max and no backoff policy)
# alfresco.event.gateway.publication.jms.broker.my-broker.retry-maxAttempts=3
# alfresco.event.gateway.publication.jms.broker.my-broker.retry-initInterval=1000
# alfresco.event.gateway.publication.jms.broker.my-broker.retry-multiplier=2
# alfresco.event.gateway.publication.jms.broker.my-broker.retry-maxInterval=5000

## SECURITY CONFIG
keycloak.enabled=true
keycloak.realm=alfresco
# The host used for the keycloak server must keep consistent in all the system or the token security
# validation may fail due to different hostnames
keycloak.auth-server-url=http://localhost:8999/auth
keycloak.resource=alfresco-event-gateway
keycloak.principal-attribute=preferred_username
# To enable basic authentication, keycloak client must be configured as "Access Type -> confidential"
# and "Credentials -> Secret" must be configured in the property "keycloak.credentials.secret"
keycloak.enable-basic-auth=true
keycloak.credentials.secret=29347df1-9a0b-4eea-bd57-74edc3df74cd
# ACS authority required to be able to create new subscriptions via the Event Gateway REST API
# defaulted to every user in ACS
alfresco.event.gateway.subscription.security.group=GROUP_EVERYONE
# ACS authority required to be able to query or modify any subscription
alfresco.event.gateway.subscription.security.managers.group=GROUP_ALFRESCO_ADMINISTRATORS

## METRICS CONFIG
management.endpoints.web.exposure.include=health,metrics
# JmsHealthIndicator fails when working with durable subscriptions in ActiveMQ since it does not allow more than one
# connection with the same client id
management.health.jms.enabled=false
# By default disable the simple the in-memory backend used as a fallback when no other registry is configured.
# To check the what metrics are collected in the metrics endpoint enable the next two properties
management.metrics.export.simple.enabled=false
management.endpoint.metrics.enabled=false

## JAVA REST API CONFIG
content.service.url=http://localhost:8080
# Security configuration (password flow)
spring.security.oauth2.client.registration.alfresco-rest-api.provider=alfresco-identity-service
spring.security.oauth2.client.registration.alfresco-rest-api.client-id=alfresco-event-gateway
spring.security.oauth2.client.registration.alfresco-rest-api.client-secret=29347df1-9a0b-4eea-bd57-74edc3df74cd
spring.security.oauth2.client.registration.alfresco-rest-api.username=admin
spring.security.oauth2.client.registration.alfresco-rest-api.password=admin
spring.security.oauth2.client.registration.alfresco-rest-api.authorization-grant-type=password
spring.security.oauth2.client.provider.alfresco-identity-service.token-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token

## SUBSCRIPTION STATUS CHECK JOB
# If this job is enabled, then any subscription which status is not updated to ACTIVE in the last
# scheduled.subscription.limit.timestamp milliseconds it is automatically set to INACTIVE
scheduled.subscription.status.enabled=false
scheduled.subscription.limit.timestamp=86400000
scheduled.subscription.fixed.delay=86400000

## EVENT STORAGE CONFIG
alfresco.event.gateway.storage.kafka.bootstrapServers=kafka:9092
alfresco.event.gateway.storage.kafka.topic=alfresco-event-gateway
